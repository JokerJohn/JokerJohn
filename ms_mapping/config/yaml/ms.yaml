common:
  lid_topic: "/hesai/pandar"
  imu_topic: "/imu/data"

  acc_cov: 0.06498801215018458  # acc noise and bias
  b_acc_cov: 1.2085272913345782e-03
  gyr_cov: 7.628553521510558e-03   # gyro noise and bias
  b_gyr_cov: 2.510775466023761e-04

  extrinsic_T: [ 0.035390573575581386096, 0.12543702425194690425,-0.13578390278350543753 ]    # from lidar to imu
  extrinsic_R: [ 0.99934183223661661543,0.026983829416008402926,-0.024246900664397554867,
                 -0.026891918098071015796,0.99962987774302106914,0.0041098040965415811166,
                 0.024348782616955969635,-0.0034550594425184497884,0.99969755890679804775 ]

  odom_link: "camera_init"
  scan_filter_size: 0.2
  map_viewer_size: 0.3
  map_saved_size: 0.1

  useImuFrame: false                        # when we use imu frame, we will get dense color cloud
  useLoopCloser: true                      # if we enable loop clouser

  # save data
  saveResultBodyFrame: true
  saveLoopdata: false                     # useless, just preparing for the new algo
  saveKeyFrame: true                      # if save keyframe pcd
  

  # PK01-RB02
  initial_pose: [ 0.993152, 0.116221, -0.011903 ,0.186796,
                  -0.116688, 0.991792, -0.052270, -0.104891,
                  0.005731, 0.053301 ,0.998562, -0.118102,
                  0.000000, 0.000000, 0.000000 ,1.000000 ]


lio:
  lidar_type: 4                         # 1 for Livox serials LiDAR, 2 for Velodyne LiDAR, 3 for ouster LiDAR, 4 for hesai
  scan_line: 32
  scan_rate: 10                         # only need to be set for velodyne, unit: Hz,
  timestamp_unit: 0                     # the unit of time/t field in the PointCloud2 rostopic: 0-second, 1-milisecond, 2-microsecond, 3-nanosecond.
  blind: 0.5                            # remove the nearest point cloud

  fov_degree: 180
  det_range: 150.0

  point_filter_num: 4
  max_iteration: 3
  filter_size_corner: 0.2
  filter_size_surf: 0.5
  filter_size_map: 0.5
  cube_side_length: 1000

pgo:
  SKIP_FRAMES: 10                                    # map visualization, every x frame we add it in the globalmap and publish it

  useKeyframe: true
  keyframe_meter_gap: 0.2
  keyframe_deg_gap: 0.1            
  
  useRawCloud: true
  method: 2                                       # ICP for Loop closure. 0: icp 1:point2plane 2:gicp
  baseline: 0                                     #0:F2F; 1:M2F

  loopZOffset: 5.0                                # for escaltor
  historyKeyframeSearchRadius: 25.0
  historyKeyframeSearchTimeDiff: 40.0
  historyKeyframeSearchNum: 25
  loopFitnessScoreThreshold: 0.3
  loopClosureFrequency: 0.5                       # if you want to detect more loop, you can set it larger

  filterDis: 2.0      # we did not add loop if the distance of consecutive node less than 10m
  filterNodeNum: 10   # we did noot detect loop every 10 nodes for ecah loop detetcion method